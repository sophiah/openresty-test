lua_package_path "/home/openresty/modules/?.lua;;";

upstream minio_s3 {
   least_conn;
   server minio:9000;
}

init_by_lua_block {
    awsAuth = require 'aws_auth';
    awsAuth.load_cred("minioadmin", "minioadmin");
}

server {
    listen       80;
    server_name  localhost;

    client_max_body_size 100M;

    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-NginX-Proxy true;

    proxy_connect_timeout 300;
    # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
    proxy_http_version 1.1;
    chunked_transfer_encoding off;

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/local/openresty/nginx/html;
    }

    location = /status {
        content_by_lua_block {
            ngx.status = 200
            ngx.say("OK");
            ngx.exit(ngx.OK)
        }
    }

    # get object
    location ~* /([^/]+)/(.*)  {
        if ($request_method = GET ) {
            access_by_lua_block {
               awsAuth.revalidate() 
            }
            proxy_pass http://minio_s3;
        }
        if ($request_method != GET ) {
            proxy_pass http://minio_s3;
        }
    }

    # cluster, bucket level
    location ~* /([^/]*) {
        access_by_lua_block {
            awsAuth.revalidate()
        }


        proxy_pass http://minio_s3;
    }
}